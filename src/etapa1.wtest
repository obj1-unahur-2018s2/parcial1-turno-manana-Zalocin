import profesionales.*
import universidades.*
import empresa.*



describe "Etapa 1" {
	var univSanMartin = new Universidad()
	var univRosario = new Universidad()
	var univCorrientes = new Universidad()
	var univHurlingham = new Universidad() 
	
	var juana = new ProfesionalVinculado()
	var melina = new ProfesionalAsociado()
	var rocio = new ProfesionalLibre()
	var luciana = new ProfesionalLibre()
	
	var empresa1 = new Empresa()
	
	
	fixture {
		univSanMartin.setProvincia('Buenos Aires')
		univSanMartin.setHonorario(3500)
		univRosario.setProvincia('Santa Fe')
		univRosario.setHonorario(2800)
		univCorrientes.setProvincia('Corrientes')
		univCorrientes.setHonorario(4200)
		univHurlingham.setProvincia('Buenos Aires')
		univHurlingham.setHonorario(8800)
		
		juana.universidad(univRosario)
		juana.honorariosPorHora()
		juana.provinciasDondePuedeTrabajar()
		melina.universidad(univCorrientes)
		melina.honorariosPorHora()
		melina.provinciasDondePuedeTrabajar()
		rocio.universidad(univHurlingham)
		rocio.setHonorariosPorHora(5000)
		rocio.honorariosPorHora()
		rocio.provinciasDondePuedeTrabajar(#{'Santa Fe', 'Cordoba', 'Buenos Aires'})
		luciana.universidad(univRosario)
		luciana.setHonorariosPorHora(3200)
		luciana.honorariosPorHora()
		luciana.provinciasDondePuedeTrabajar(#{'Santa Fe', 'Entre Rios'})
		
		empresa1.contratarProfesionales(juana)
		empresa1.contratarProfesionales(melina)
		empresa1.contratarProfesionales(rocio)
		empresa1.contratarProfesionales(luciana)
		empresa1.setHonorarioDeReferencia(3500)
		
		
		
	}
	

	test "profesional caro" {
		assert.equals( [rocio], empresa1.profesionalesCaros() )

	}
	
	test 'universidades formadoras' {
		assert.equals( #{univRosario, univCorrientes, univHurlingham}, empresa1.universidadesFormadoras() )
		
	}
	
	test "profesional mas Barato" {
		assert.equals( juana, empresa1.profesionalMasBarato() )

	}
	
	test "provincias cubiertas"{ 
		const listadoProvincias = #{'Santa Fe', 'Cordoba', 'Misiones'}	
			
		assert.equals( #{'Santa Fe', 'Cordoba'}, empresa1.provinciasCubiertas(listadoProvincias) )
	}
	//NO est√° tomando Cordoba.
	
	test "donde estudian"{
		assert.equals(2,empresa1.dondeEstudiaron(univRosario))
		assert.equals(1,empresa1.dondeEstudiaron(univHurlingham))
		assert.equals(1,empresa1.dondeEstudiaron(univCorrientes))
		assert.equals(0,empresa1.dondeEstudiaron(univSanMartin))

	}

}